options(repos = c(RSM = "https://radiant-rstats.github.io/minicran", CRAN #
= "https://cloud.r-project.org"))#
install.packages("radiant")
c = c(1,2,3,4,5)
c
read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
data = read.table('final_marks')
getwd()
read.csv("C:/Data/final_marks", sep = "", header = TRUE)
read.csv("C:/Data/final_marks", sep = "", header = TRUE)
read.table("C:/Data/final_marks", sep = "", header = TRUE)
read.table("C:/Data/final_marks", sep = "", header = TRUE)
getwd()
setwd("/Users/eunice/ST1131")
setwd("/Users/eunice/Desktop/ST1131")
read.csv("C:/Data/final_marks", sep = "", header = TRUE)
getwd()
read.csv("crab.txt", header = TRUE, sep = "")
read.csv("final_marks", header = TRUE, sep = "")
table1=read.csv("final_marks", header = TRUE, sep = "")
names(data1)[2] = "mark"
names(table1)[2] = "mark"
# Mean#
mean_x <- mean(mark)#
#
# Median#
median_x <- median(mark)#
#
# Interquartile Range (IQR)#
iqr_x <- IQR(mark)#
#
# Variance#
variance_x <- var(mark)#
#
# Range#
range_x <- range(mark)
colnames(table1)[2] = "mark"
names(table1)[2] = "mark"
table1=read.csv("final_marks", header = TRUE, sep = "")
names(table1)
names(table1)[2] = "mark"
names(table1)
attach(table1)
weight
table1$weight
table1=read.table("final_marks", header = TRUE, sep = "")
names(table1)[2] = "mark"
names(table1)
attach(table1)
table1$weight
table1[1:10, ]
table1[ ,2:2]
table2 = table1[ ,2:2]
# Mean#
mean_x <- mean(table2)#
#
# Median#
median_x <- median(table2)#
#
# Interquartile Range (IQR)#
iqr_x <- IQR(table2)#
#
# Variance#
variance_x <- var(table2)#
#
# Range#
range_x <- range(table2)
mean_x <- mean(as.numeric(table2), na.rm = TRUE)
mean_x <- mean(as.numeric(table2), na.rm = TRUE)
mean_x <- mean(as.numeric(table2), na.rm = TRUE)
mean_x <- mean(as.numeric(table2), na.rm = TRUE)
mean_x <- mean(as.numeric(table2), na.rm = TRUE)
# Mean#
mean_x <- mean(table2)#
#
# Median#
median_x <- median(table2)#
#
# Interquartile Range (IQR)#
iqr_x <- IQR(table2)#
#
# Variance#
variance_x <- var(table2)#
#
# Range#
range_x <- range(table2)
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
range_x
mean_x #
median_x #
iqr_x #
variance_x#
range_x
cleaned_data <- gsub("[\",]", "", table2)#
numeric_vector <- as.numeric(scan(text = cleaned_data, what = numeric(), sep = ","))#
numeric_vector
mean_x <- mean(table2)#
#
# Median#
median_x <- median(table2)#
#
# Interquartile Range (IQR)#
iqr_x <- IQR(table2)#
#
# Variance#
variance_x <- var(table2)#
#
# Range#
range_x <- range(table2)
cleaned_data <- gsub("[\",]", "", table2)#
numeric_vector <- as.numeric(scan(text = cleaned_data, what = numeric(), sep = ","))#
numeric_vector#
#
# Mean#
mean_x <- mean(numeric_vector)#
#
# Median#
median_x <- median(numeric_vector)#
#
# Interquartile Range (IQR)#
iqr_x <- IQR(numeric_vector)#
#
# Variance#
variance_x <- var(numeric_vector)#
#
# Range#
range_x <- range(numeric_vector)#
mean_x #
median_x #
iqr_x #
variance_x#
range_x
hist(numeric_vector, main = "Histogram of Final Marks", xlab = "Final Marks", ylab = "Frequency", col = "skyblue", border = "black")
matrix <- matrix(c("Patient", "b", "c", "d", "e", "f", "g", "h", "i", "j"), nrow = 2, ncol = 10)
matrix
# Creating a 2x10 matrix with character values#
matrix <- matrix(c("Patient", "Blood pressure", "c", "d", "e", "f", "g", "h", "i", "j"), nrow = 2, ncol = 10)#
matrix
# Creating a 2x10 matrix with character values#
matrix <- matrix(c("Patient", "Blood pressure", "1", "96", "2", "119", "3", "119", "4", "108" , "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 10)#
matrix
# Original matrix with character values#
matrix <- matrix(c("Patient", "Blood pressure", "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 10)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 10)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("Patient", "Blood pressure", "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 9)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("Patient", "Blood pressure", "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 10)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 10)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("Patient", "Blood pressure", "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 9)#
#
# Print the numeric matrix#
print(numeric_matrix)
matrix <- matrix(c( "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 9)#
#
# Print the numeric matrix#
print(numeric_matrix)
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 9)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_vector <- as.numeric(matrix[3:length(matrix)])#
#
# Check the length of the numeric vector#
print(length(numeric_vector))#
#
# Adjust dimensions based on the length#
numeric_matrix <- matrix(numeric_vector, nrow = length(numeric_vector) / 9, ncol = 9)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 8)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 9)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 8)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 8)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 8)  # Adjusted ncol to 8#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert elements to numeric (excluding the first two elements which are not numeric)#
numeric_matrix <- matrix(as.numeric(matrix[3:length(matrix)]), nrow = 2, ncol = 9)  # Adjusted ncol to 8#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
# Print the numeric matrix#
print(numeric_matrix)
matrix <- matrix(c( "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
# Print the numeric matrix#
print(numeric_matrix)
matrix <- matrix(c( "1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
# Print the numeric matrix#
print(matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Print the character matrix#
print(matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Print the character matrix#
print(matrix)#
#
# Convert the matrix to numeric values#
numeric_matrix <- as.numeric(matrix)#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Print the character matrix#
print(matrix)#
#
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert the matrix to numeric values while preserving rows and columns#
numeric_matrix <- matrix(apply(matrix, 2, as.numeric), nrow = nrow(matrix), ncol = ncol(matrix))#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Convert the matrix to numeric values while preserving rows and columns#
numeric_matrix <- matrix(apply(matrix, 2, as.numeric), nrow = nrow(matrix), ncol = ncol(matrix))#
#
# Print the numeric matrix#
print(numeric_matrix)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Extract the second row and convert it to numeric#
row_to_calculate <- as.numeric(matrix[2, ])#
#
# Calculate the median for the second row#
median_value <- median(row_to_calculate)#
#
# Print the median value#
print(median_value)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Extract the second row and convert it to numeric#
row_to_calculate <- as.numeric(matrix[2, ])#
#
# Calculate the mean, variance, and standard deviation for the second row#
mean_value <- mean(row_to_calculate)#
variance_value <- var(row_to_calculate)#
std_deviation_value <- sd(row_to_calculate)#
#
# Print the results#
print(mean_value)#
print(variance_value)#
print(std_deviation_value)
# Original matrix with character values#
matrix <- matrix(c("1", "96", "2", "119", "3", "119", "4", "108", "5", "126", "6", "128", "7", "110", "8", "105", "9", "94"), nrow = 2, ncol = 9)#
#
# Extract the second row and convert it to numeric#
row_to_calculate <- as.numeric(matrix[2, ])#
# Calculate the mean, variance, and standard deviation for the second row#
median_value <- median(row_to_calculate)#
mean_value <- mean(row_to_calculate)#
variance_value <- var(row_to_calculate)#
std_deviation_value <- sd(row_to_calculate)
# Print the results#
print(median_value)#
print(mean_value)#
print(variance_value)#
print(std_deviation_value)
# Subtract 10 from each value#
row_adjusted <- row_to_calculate - 10#
#
# Calculate the new mean and variance#
new_mean <- mean(row_adjusted)#
new_variance <- var(row_adjusted)#
#
# Print the results#
print(new_mean)#
print(new_variance)
# Create a histogram with probability#
hist(row_adjusted, prob = TRUE, main = "Histogram of Adjusted Data", xlab = "Adjusted Values")#
#
# Add labels to the axes#
axis(1, at = seq(min(row_adjusted), max(row_adjusted), by = 5), labels = seq(min(row_to_calculate), max(row_to_calculate), by = 5))#
#
# Add a density curve#
lines(density(row_adjusted), col = "blue", lwd = 2)
# Create a histogram with probability#
hist(row_adjusted, prob = TRUE, main = "Histogram of Adjusted Data", xlab = "Adjusted Values")#
#
# Add labels to the axes#
axis(1, at = seq(min(row_adjusted), max(row_adjusted), by = 5), labels = seq(min(row_to_calculate), max(row_to_calculate), by = 5))#
#
# Add a density curve#
lines(density(row_adjusted), col = "blue", lwd = 2)
hist(row_adjusted, prob = TRUE, main = "Histogram of Adjusted Data", xlab = "Adjusted Values")
#################### Set working directory #####################
setwd("/Users/eunice/Desktop/ST1131")
setwd("/Users/eunice/Desktop/ST1131")
setwd("/Users/eunice/Desktop/ST1131")#
#
read.csv("lung_cancer", header = TRUE, sep = ",")
setwd("/Users/eunice/Desktop/ST1131")
read.csv("lung_cancer.csv", header = TRUE, sep = ",")
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
freq tables#
table(Gender)#
prop.table(table(Gender))#
#
prop,table(table(Gender)) * 100
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables#
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale#
gender <- ifelse(lung$Gender=="0", "Female", "Male")#
#
table(gender)#
prop.table(table(gender))
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
catgender <- ifelse(lung$Gender=="0", "Female", "Male")#
#
table(catgender)#
prop.table(table(catgender))
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "F", "M")#
#
table(gender)#
prop.table(table(gender))
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male", "nonbinary")#
#
table(gender)#
prop.table(table(gender))
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male")#
#
table(gender)#
prop.table(table(gender))
Gender#
gender
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender * 3 #cannot multiply anymore
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore
Gender*3#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore
#################### Set working directory #####################
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male")#
#
table(gender)#
prop.table(table(gender))#
#
Gender #
gender#
# R cannot recognize that 0 and 1 means cate, it will read as numeric#
# but can factorize it to say 0 and 1 are category#
# after factorizing, wont be able to do multiplication#
Gender*3#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male")#
#
table(gender)#
prop.table(table(gender))#
#
Gender #
gender#
# R cannot recognize that 0 and 1 means cate, it will read as numeric#
# but can factorize it to say 0 and 1 are category#
# after factorizing, wont be able to do multiplication#
Gender*3#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
Gender*3#
#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male")#
#
table(gender)#
prop.table(table(gender))#
#
Gender #
gender
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
#
prop.table(table(Gender)) * 100#
Gender*3
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
#
Gender#
Gender*3
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
Gender#
Gender*3
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male")#
#
table(gender)#
prop.table(table(gender))#
#
Gender #
gender#
# R cannot recognize that 0 and 1 means cate, it will read as numeric#
# but can factorize it to say 0 and 1 are category#
# after factorizing, wont be able to do multiplication#
#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore#
#
barplot(table(gender))
barplot(table(gender))
barplot(table(gender), ylab = "freq", xlab = "gender", col = c(2,5), main = "bar plot of gender")
pie(table(gender))
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
new_row <- c(1, 35, 0, 46, 2, 1)#
#
# Add the new row to the data frame#
lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
write.csv(lung, "lung_cancer.csv", row.names = FALSE)#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male", "non binary")#
#
table(gender)#
prop.table(table(gender))#
Gender #
gender#
# R cannot recognize that 0 and 1 means cate, it will read as numeric#
# but can factorize it to say 0 and 1 are category#
# after factorizing, wont be able to do multiplication#
#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore#
#
barplot(table(gender))#
barplot(table(gender), ylab = "freq", xlab = "gender", col = c(2,5), main = "bar plot of gender")#
#
pie(table(gender))
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
new_row <- c(1, 35, 0, 46, 2, 1)#
#
# Add the new row to the data frame#
lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
write.csv(lung, "lung_cancer.csv", row.names = FALSE)#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
# gender <- ifelse(lung$Gender=="0", "female", "male", "non binary")#
#
# Assuming lung is your data frame#
lung$gender <- ifelse(lung$Gender == "0", "female", ifelse(lung$Gender == "1", "male", "non binary"))#
table(gender)#
prop.table(table(gender))#
Gender #
gender#
# R cannot recognize that 0 and 1 means cate, it will read as numeric#
# but can factorize it to say 0 and 1 are category#
# after factorizing, wont be able to do multiplication#
#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore#
#
barplot(table(gender))#
barplot(table(gender), ylab = "freq", xlab = "gender", col = c(2,5), main = "bar plot of gender")
BMI = c(29.5,28.6,24.7, 28.8, 23.7, 23.3,28.8, 26.7, 23.6, 27.1, 24.5,20.7,28,24.7, 16.3,26,14,#
25.8,17.5,30.7,17.5,30.6, 29.7, 24.5,35,21.9,20.9,24.3,27.3, 26.5, 22,16.3, 30.1, 27.2)#
#
hist(BMI, col = 3)#
#
hist(BMI, col = 4, prob = TRUE, ylab = "Probability")
BMI = c(29.5,28.6,24.7, 28.8, 23.7, 23.3,28.8, 26.7, 23.6, 27.1, 24.5,20.7,28,24.7, 16.3,26,14,#
25.8,17.5,30.7,17.5,30.6, 29.7, 24.5,35,21.9,20.9,24.3,27.3, 26.5, 22,16.3, 30.1, 27.2)#
#
hist(BMI, col = 3)#
#
hist(BMI, col = 4, prob = TRUE, ylab = "Probability")
BMI = c(29.5,28.6,24.7, 28.8, 23.7, 23.3,28.8, 26.7, 23.6, 27.1, 24.5,20.7,28,24.7, 16.3,26,14,#
25.8,17.5,30.7,17.5,30.6, 29.7, 24.5,35,21.9,20.9,24.3,27.3, 26.5, 22,16.3, 30.1, 27.2)#
#
hist(BMI, col = "blue")#
#
hist(BMI, col = 4, prob = TRUE, ylab = "Probability")
BMI = c(29.5,28.6,24.7, 28.8, 23.7, 23.3,28.8, 26.7, 23.6, 27.1, 24.5,20.7,28,24.7, 16.3,26,14,#
25.8,17.5,30.7,17.5,30.6, 29.7, 24.5,35,21.9,20.9,24.3,27.3, 26.5, 22,16.3, 30.1, 27.2)#
#
hist(BMI, col = "blue")
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
new_row <- c(1, 35, 0, 46, 2, 1)#
#
# Add the new row to the data frame#
lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
write.csv(lung, "lung_cancer.csv", row.names = FALSE)
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
new_row <- c(35, 0, 46, 2, 1)#
#
# Add the new row to the data frame#
lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
write.csv(lung, "lung_cancer.csv", row.names = FALSE)
setwd("/Users/eunice/Desktop/Y2S2/ST1131")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
new_row <- c(0, 46, 2, 1)#
#
# Add the new row to the data frame#
lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
write.csv(lung, "lung_cancer.csv", row.names = FALSE)
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
prop.table(table(Gender)) * 100
BMI = c(BMI, 45)#
boxplot(BMI, col = 2, ylab = "BMI")
hist(BMI, col = 3)#
#
hist(BMI, col = 4, prob = TRUE, ylab = "Probability")#
IQR(BMI)#
boxplot(BMI)
setwd("/Users/eunice/Desktop/Y2S2/ST1131/data")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)
setwd("/Users/eunice/Desktop/Y2S2/ST1131/data")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
new_row <- c(0, 46, 2, 1)#
#
# Add the new row to the data frame#
lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
write.csv(lung, "lung_cancer.csv", row.names = FALSE)#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
# gender <- ifelse(lung$Gender=="0", "female", "male", "non binary")#
#
# Assuming lung is yo
setwd("/Users/eunice/Desktop/Y2S2/ST1131/data")#
#
read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
lung=read.csv("lung_cancer.csv", header = TRUE, sep = ",")#
attach(lung)#
# Create the new row#
# new_row <- c(0, 46, 2, 1)#
#
# Add the new row to the data frame#
# lung <- rbind(lung, new_row)#
#
# Write the modified data frame back to the CSV file#
# write.csv(lung, "lung_cancer.csv", row.names = FALSE)#
# freq tables prop.table takes in argument of a table#
table(Gender)#
prop.table(table(Gender))#
prop.table(table(Gender)) * 100#
#
# categroical varibale, give name #
gender <- ifelse(lung$Gender=="0", "female", "male")#
table(gender)#
prop.table(table(gender))#
Gender #
gender#
# R cannot recognize that 0 and 1 means cate, it will read as numeric#
# but can factorize it to say 0 and 1 are category#
# after factorizing, wont be able to do multiplication#
#
lung$Gender = factor(lung$Gender)#
attach(lung)#
Gender#
Gender*3 #cannot multiply anymore#
#
barplot(table(gender))#
barplot(table(gender), ylab = "freq", xlab = "gender", col = c(2,5), main = "bar plot of gender")#
#
pie(table(gender))
